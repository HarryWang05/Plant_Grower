/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw2(PApplet appc, GWinData data) { //_CODE_:Window:296720:
  appc.background(230);
} //_CODE_:Window:296720:

public void sunlightChange(GCustomSlider source, GEvent event) { //_CODE_:sunlight:535623:
  println("sunlight - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:sunlight:535623:

public void waterChange(GCustomSlider source, GEvent event) { //_CODE_:water:226766:
  println("water - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:water:226766:

public void fertilizerChange(GCustomSlider source, GEvent event) { //_CODE_:fertilizer:497119:
  println("fertilizer - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:fertilizer:497119:

public void plantChoosingClicked(GDropList source, GEvent event) { //_CODE_:plantChoose:566794:
  println("plantChoose - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:plantChoose:566794:

public void button1_click1(GButton source, GEvent event) { //_CODE_:addNewPlant:257619:
  println("addNewPlant - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:addNewPlant:257619:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  Window = GWindow.getWindow(this, "Window title", 0, 0, 480, 240, JAVA2D);
  Window.noLoop();
  Window.setActionOnClose(G4P.KEEP_OPEN);
  Window.addDrawHandler(this, "win_draw2");
  sunlight = new GCustomSlider(Window, 15, 20, 213, 40, "grey_blue");
  sunlight.setLimits(1, 0, 5);
  sunlight.setNbrTicks(5);
  sunlight.setNumberFormat(G4P.INTEGER, 0);
  sunlight.setOpaque(false);
  sunlight.addEventHandler(this, "sunlightChange");
  sunlightLabel = new GLabel(Window, 14, 14, 80, 20);
  sunlightLabel.setText("Sunlight");
  sunlightLabel.setOpaque(false);
  water = new GCustomSlider(Window, 242, 21, 222, 40, "grey_blue");
  water.setLimits(1, 0, 5);
  water.setNbrTicks(5);
  water.setNumberFormat(G4P.INTEGER, 0);
  water.setOpaque(false);
  water.addEventHandler(this, "waterChange");
  waterLabel = new GLabel(Window, 244, 13, 80, 20);
  waterLabel.setText("Water");
  waterLabel.setOpaque(false);
  fertilizer = new GCustomSlider(Window, 14, 92, 215, 40, "grey_blue");
  fertilizer.setLimits(1, 0, 5);
  fertilizer.setNumberFormat(G4P.INTEGER, 0);
  fertilizer.setOpaque(false);
  fertilizer.addEventHandler(this, "fertilizerChange");
  fertilizerLabel = new GLabel(Window, 14, 84, 80, 20);
  fertilizerLabel.setText("Fertilizer");
  fertilizerLabel.setOpaque(false);
  plantChoose = new GDropList(Window, 243, 98, 220, 145, 4, 10);
  plantChoose.setItems(loadStrings("list_566794"), 0);
  plantChoose.addEventHandler(this, "plantChoosingClicked");
  addNewPlant = new GButton(Window, 16, 158, 112, 35);
  addNewPlant.setText("Add New Plant");
  addNewPlant.addEventHandler(this, "button1_click1");
  Window.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow Window;
GCustomSlider sunlight; 
GLabel sunlightLabel; 
GCustomSlider water; 
GLabel waterLabel; 
GCustomSlider fertilizer; 
GLabel fertilizerLabel; 
GDropList plantChoose; 
GButton addNewPlant; 
